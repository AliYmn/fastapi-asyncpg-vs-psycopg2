services:
  postgres:
    image: postgres:16.2-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - "127.0.0.1:${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app-service:
    build:
      context: .
      dockerfile: compose/production/Dockerfile
    volumes:
      - .:/app
      - pip-cache:/root/.cache/uv
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - app-network

networks:
  app-network:

volumes:
  pip-cache:
